name: Run automated end-to-end tests

on:
    push:
        branches: [master]

    pull_request:
        branches: [master]

jobs:
    test:
        name: "Automated tests"
        runs-on: ubuntu-latest
        permissions:
          packages: read
          contents: read

        steps:
            - name: "Checking changed files"
              id: files
              uses: softprops/diffset@v1
              if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
              with:
                global_files: |
                  !{packages/**/*,configs/e2e/*.json}
                not_atlas_native_files: |
                  !packages/theming/atlas/src/**/native/**
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: "Checking-out code"
              uses: actions/checkout@v2
              with:
                  submodules: false
            - name: "Fetching master to compare"
              if: github.event_name == 'pull_request' && steps.files.outputs.global_files == ''
              run:
                  git fetch --no-tags --prune --depth=1 origin +refs/heads/${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
            - name: "Defining environment variables"
              id: variables
              run:
                  echo "::set-output name=arg::$(if [ "${{ steps.files.outputs.global_files }}" = "" ] && ${{ github.event_name == 'pull_request' }}; then echo '--since origin/${{ github.base_ref }}'; else echo ''; fi)"
            - name: "Defining cache"
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            - name: "Installing dependencies"
              run: npm install
            - name: "Building package in production mode"
              run: npm run release -- ${{ steps.variables.outputs.arg }}
            - name: Login to GitHub Container Registry
              if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
              uses: docker/login-action@v1
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: "Executing E2E tests"
              if: github.event_name != 'pull_request' || steps.files.outputs.not_atlas_native_files != ''
              run: npm run test:e2e -- ${{ steps.variables.outputs.arg }}
              env:
                FORKED: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
            - name: "Fixing files permissions"
              if: failure()
              run: |
                  sudo find ${{ github.workspace}}/packages/pluggableWidgets -type d -exec chmod 755 {} \;
                  sudo find ${{ github.workspace}}/packages/theming -type d -exec chmod 755 {} \;
                  sudo find ${{ github.workspace}}/packages/pluggableWidgets -type f -exec chmod 644 {} \;
                  sudo find ${{ github.workspace}}/packages/theming -type f -exec chmod 644 {} \;
            - name: "Archive test screenshot diff results"
              uses: actions/upload-artifact@v2
              if: failure()
              with:
                  name: test-screenshot-results
                  path: |
                      ${{ github.workspace}}/packages/pluggableWidgets/**/tests/e2e/screenshot-results/diff/*.png
                      ${{ github.workspace}}/packages/pluggableWidgets/**/tests/e2e/screenshot-results/TESTFAIL_*.png
                      ${{ github.workspace}}/packages/theming/**/tests/e2e/screenshot-results/diff/*.png
                      ${{ github.workspace}}/packages/theming/**/tests/e2e/screenshot-results/TESTFAIL_*.png
                  if-no-files-found: error
